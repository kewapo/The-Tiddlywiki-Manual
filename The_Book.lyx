#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options false
\begin_modules
customHeadersFooters
tcolorbox
\end_modules
\maintain_unincluded_children false
\language english
\language_package babel
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "The Tiddlywiki manual"
\pdf_author "Luis Javier González Caballero"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\notefontcolor #0000ff
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle plain
\listings_params "showtabs={true;}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset External
	template PDFPages
	filename cover page.pdf

\end_inset


\end_layout

\begin_layout Title
Tiddlywiki
\end_layout

\begin_layout Title
Advanced Customization
\end_layout

\begin_layout Author
Luis Javier González Caballero
\begin_inset Newline newline
\end_inset

Riz - google groups
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter*
About the writers
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement i
overhang 0in
width "35col%"
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Luis.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Luis Javier González Caballero is an IT Technitian with extensive experience
 in user support.
 He has done some programming works mainly in Python.
 He is an Industrial Technician Engineer from the
\begin_inset CommandInset href
LatexCommand href
name "https://www.unileon.es"
target "University of León"
literal "false"

\end_inset

, Spain.
 and a Computer Engineer from the
\begin_inset CommandInset href
LatexCommand href
name "https://www.uned.es"
target "UNED University"
literal "false"

\end_inset

 in Spain too.
\end_layout

\begin_layout Standard
He is an active person with a great capacity for learning, which he is involved.
\end_layout

\begin_layout Standard
Apart from his professional career he collaborates with numerous non-profit
 organizations and free projects and is an animal lover.
 He lives in León, a small town in northwestern Spain with his family.
\end_layout

\begin_layout Standard
\noindent
\align right
\begin_inset Graphics
	filename Images/Logo-correo.jpg

\end_inset

kewapo@gmail.com
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset External
	template PDFPages
	filename Tiddlywiki_map.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Standard
Mastering Tiddlywiki is a hard a long trip.
 Why? you can ask yourserf.
 I answer you.
 Tiddlywiki is a confluence of many technologies:
\end_layout

\begin_layout Enumerate
The first step is understanding Wikitext.
 It is a markup language like Markdonw: it specify code characters for the
 format.
\end_layout

\begin_layout Enumerate
You need some understanding of HTML.
 At the bottom, Tiddlywiki is a HTML file with Javascirpt code.
\end_layout

\begin_layout Enumerate
Tiddlywiki uses CSS too.
 CSS is a technology that goes hand in hand with HTML.
\end_layout

\begin_layout Enumerate
If you want to program you own widgets you need Javascript.
\end_layout

\begin_layout Enumerate
Although you can use tw as a single file, you can have a self-hosted wiki
 installing node.js and tiddlywiki from its repository.
\end_layout

\begin_layout Standard
But f you want to be a Tiddlywiki master, the first of all is to understand
 the underlying of Tiddliwiki.
 This is where this book is going to help you.
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Key points
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Itemize

\size footnotesize
Tiddlywiki is more than a note-taking application.
\end_layout

\begin_layout Itemize

\size footnotesize
It is an advanced way of organizing your information.
\end_layout

\begin_layout Itemize

\size footnotesize
All notes you will add to it are called tiddlers.
\end_layout

\begin_layout Itemize

\size footnotesize
You can download an empty wiki from its web site.
\end_layout

\begin_layout Itemize

\size footnotesize
It is portable and multi platform.
\end_layout

\begin_layout Itemize

\size footnotesize
To add format to your text inside the tiddlers you use format characters:
 //text// for italics, __text__ for underline, [[Tiddler]] for links etc.
 This is called Wikitext.
\end_layout

\begin_layout Itemize

\size footnotesize
It use tags to organize, classify etc the tiddlers.
\end_layout

\begin_layout Itemize

\size footnotesize
It use fields to add extra information to the tiddlers.
 For example the created date field, the modified date field etc.
\end_layout

\begin_layout Itemize

\size footnotesize
You can include the information of a tiddler inside other tiddler without
 writing twice.
 This is called Transclusion.
\end_layout

\begin_layout Itemize

\size footnotesize
You can use templates to personalize the way that tiddlywiki shows the tiddlers.
\end_layout

\begin_layout Itemize

\size footnotesize
Tiddlywiki uses Filters to get a group of tiddlers.
 Filters are written in a little language inside tiddlywiki.
 For example, to get all tiddlers tagged with the
\begin_inset Quotes eld
\end_inset

Person
\begin_inset Quotes erd
\end_inset

 tag you write {{{ [tag[Person]] }}}.
\end_layout

\begin_layout Itemize

\size footnotesize
You can add code to your wiki in Macros and Widgets.
 This is used to personalize the wiki.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
What is tiddlywiki
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement bh
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:What-is-Tiddlywiki"

\end_inset

What is Tiddlywiki
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/TW concept.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In this section we will talk about:
\end_layout

\begin_layout Itemize
TW description.
\end_layout

\begin_layout Itemize
TW philosophy.
\end_layout

\begin_layout Itemize
TW as a single page application.
\end_layout

\begin_layout Itemize
What are tiddlers.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
TiddlyWiki is a personal and a non-linear notebook for organizing and sharing
 complex information.
 It is an open-source single page application wiki in the form of a single
 HTML file that includes all javascript code, the CSS format and the content.
 It is designed to be easy to customize and re-shape depending on application.
 It facilitates re-use of content by dividing it into small pieces called
 Tiddlers.
 It is not an application but a large html page that runs in almost all
 web browsers so it is very portable: you can use it in a USB stick, in
 a phone or tablet or as a web page in some internet servers.
 Tiddlywiki is made of tiddlers: little text areas or notes with a title
 and a content.
 You can add all the tiddlers you want and each of them will contain certain
 information.
\end_layout

\begin_layout Standard
It was created by the British software developer Jeremy Ruston in 2004.
 Tiddlywiki is free and open source software and is distributed under the
 terms of the BSD license.
\end_layout

\begin_layout Standard
Tiddlywiki introduces the concept of microcontent: the smallest structured
 and addressable piece of information, the smallest semantically meaningful
 units.
 This small piece of information is called tiddler.
 The purpose of this tiddlers is recording and organizing information is
 so that it can be used as many times as necessary.
\end_layout

\begin_layout Standard
You can find the basic information of Tiddlywiki in the web site:
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://tiddlywiki.com/
\end_layout

\end_inset

.
 I recommend you take a look.
\end_layout

\begin_layout Section
Starting with tiddlywiki
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In this section we will talk about:
\end_layout

\begin_layout Itemize
Where we can find tiddlywiki.
\end_layout

\begin_layout Itemize
How to download and a basic usage.
\end_layout

\begin_layout Itemize
Tagging tiddlers.
\end_layout

\begin_layout Itemize
Transclusion and filters.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:GettingStarted"

\end_inset

The first run of Tiddlywiki
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/GettingStarted.png
	scale 60

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first step will be download an empty wiki page to our computer:
\end_layout

\begin_layout Enumerate
Go to
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://tiddlywiki.com/
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Look for the tiddler
\begin_inset Quotes eld
\end_inset

GettingStarted
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
Click on the red button,
\begin_inset Quotes eld
\end_inset

Download Empty
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
Save the empty tiddlywiki in your computer.
\end_layout

\begin_layout Standard
Once you have the file you can open it with the browser (best with Firefox
 or Chrome).
 You will see the page of the Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:GettingStarted"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Assign a title and a subtitle to your wiki.
 You will notice that the tick icon above the subtitle change to red.
\end_layout

\begin_layout Standard
This shows us an important thing: as an html web page, the TW file can't
 save by itself.
 You musts save them by hand if you don't want to loose the data.
 Click in this red icon and save the file in the same location (maybe you
 have to configure your browser).
 The next time you open the empty wiki in the browser the title and subtitle
 will have changed.
 Other operations you can do is to create an initial tiddler and change
 the
\begin_inset Quotes eld
\end_inset

Default tiddlers
\begin_inset Quotes erd
\end_inset

 text area to the title of this first tiddler.
 To create tiddlers you will click on the "plus" icon under the subtitle.
\end_layout

\begin_layout Standard
The First Rule of using Tiddlywiki: backup your wiki file regularly retaining
 some backward copies.
\end_layout

\begin_layout Section
Reasons to use tiddlywiki
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In this section we will talk about:
\end_layout

\begin_layout Itemize
TW as a way of organizing notes.
\end_layout

\begin_layout Itemize
TW as a toolbox.
\end_layout

\begin_layout Itemize
Basic uses of TW.
\end_layout

\begin_layout Itemize
The TW community.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You have powerful reasons to use tiddlywiki:
\end_layout

\begin_layout Itemize
You can use them without installing any software.
\end_layout

\begin_layout Itemize
It is multiplaform: use your wiki in your tablet, mac, linux, windows or
 phone systems.
\end_layout

\begin_layout Itemize
It is portable: you can put in a USB stick, copy to your computer or upload
 to many internet servers.
\end_layout

\begin_layout Itemize
Its unlinear approach allows you to use the information in new and helpfull
 ways.
\end_layout

\begin_layout Itemize
You can organize your information and knowledge your way.
\end_layout

\begin_layout Itemize
You can change the appearance and behavior of your wiki and adapt them to
 your preferences.
\end_layout

\begin_layout Itemize
Tiddlywiki promote information sharing.
\end_layout

\begin_layout Section
Elements of TW
\end_layout

\begin_layout Subsection
The screen
\end_layout

\begin_layout Standard
When you open a Tiddlywiki file you can see a left size with all open tiddlers
 and a right side with the title, buttons, and menus.
 In chapter 3 we will see the whole screen (look at the Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-screen-Tiddlywiki"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Subsection
Tiddlers
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:A-tiddler"

\end_inset

A tiddler
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/A tiddler.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
All notes you can add to Tiddlywiki are written in Tiddlers.
 It consist of a Title on the top, the tags and its content.
 A Tiddler is the basic element of Tiddliwiki.
 All things inside TW are made of tiddlers.
 The GettinStarted page you can see is a tiddler.
 The right menus too.
\end_layout

\begin_layout Standard
The most important thing in a tiddler is its title: this will be unique.
 In Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-tiddler"
plural "false"
caps "false"
noprefix "false"

\end_inset

 you can see the first tiddler:
\end_layout

\begin_layout Itemize
Buttons to edit and close the tiddler.
\end_layout

\begin_layout Itemize
Title:
\begin_inset Quotes eld
\end_inset

My first tiddler
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
The field: created date.
\end_layout

\begin_layout Itemize
Tags: only one:
\begin_inset Quotes eld
\end_inset

this-is-a-tag
\begin_inset Quotes erd
\end_inset

.
 You can add as many tags as you want.
\end_layout

\begin_layout Itemize
Content:
\begin_inset Quotes eld
\end_inset

This is the content of the tiddler
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
When you click the
\begin_inset Quotes eld
\end_inset

pen
\begin_inset Quotes erd
\end_inset

 icon at the top you can see a tiddler in edition mode:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Creating-a-tiddler"

\end_inset

Creating a tiddler
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/tiddler edition.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Buttons to delete, discard and save the tiddler
\end_layout

\begin_layout Itemize
Title at the top:
\begin_inset Quotes eld
\end_inset

New Tiddler
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Tag zone
\end_layout

\begin_layout Itemize
The format toolbar
\end_layout

\begin_layout Itemize
The content of the tiddler
\end_layout

\begin_layout Itemize
The type of the tiddler
\end_layout

\begin_layout Itemize
The fields zone.
 There are predefined fields but you can add your own fields.
\end_layout

\begin_layout Standard
If you close the tiddler it disappears from the screen.
 You can search it with the search bar, under the save button or choosing
 in the right menu More / All.
\end_layout

\begin_layout Subsection
The Story River
\end_layout

\begin_layout Standard
The left side of the Tiddlywiki is called the Story River and shows all
 open tiddlers.
\end_layout

\begin_layout Standard
A typical wiki contains hundreds or thousands of tiddlers, some of them
 open in the left side and others closed stored in the file.
 You can search the closed tiddlers with the search bar or with the menus.
\end_layout

\begin_layout Subsection
Tags
\end_layout

\begin_layout Standard
Tagging is a way of organizing tiddlers into categories.
 For example, if you had tiddlers representing various individuals, you
 could tag them as friend, family, colleague etc to indicate these people's
 relationships to you.
 By tagging your tiddlers, you can view, navigate and organize your information.
\end_layout

\begin_layout Subsection
Fields
\end_layout

\begin_layout Standard
A tiddler has field.
 There are system field like the created and modified date but you can add
 your own ones.
\end_layout

\begin_layout Subsection
Text format
\end_layout

\begin_layout Standard
The formatted text inside a tiddlerr is called
\begin_inset Quotes eld
\end_inset

Wikitext
\begin_inset Quotes erd
\end_inset

.
 The best way of learing Wikitext is playing with the toolbar above the
 tiddler in edition mode.
 For example, if you want some words to be italiced and click in the italic
 icon of the tool bar while editing a tiddler, Tiddlywiki will add two slashes
 around the words:
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

//some words//
\end_layout

\end_inset

.
 WikiText is a concise, expressive way of typing a wide range of text formatting
, hypertext and interactive features.
 It allows you to focus on writing without a complex user interface getting
 in the way.
 It is designed to be familiar for users of MarkDown, but with more of a
 focus on linking and the interactive features.
\end_layout

\begin_layout Standard
Other example: you can make a link of a tiddler inside other tiddler writting
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

[[Tiddler Title Linked]]
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Transclusion
\end_layout

\begin_layout Standard
Transclusion is the process of referencing one tiddler "A" from another
 tiddler "B" such that the content of "A" appears to be a part of "B".
 It avoid Avoid having duplicate information.
\end_layout

\begin_layout Itemize
To show the information of a tiddler inside other, write
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

{{Tiddler Title}}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
To show the content of a field write
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

{{Tiddler Tittle!!field name}}
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
to show the content of a field in the same tiddler write:
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

{{!!field name}}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Templates
\end_layout

\begin_layout Standard
Is a role a tiddler can have.
 Is like a shape for other tiddlers.
 It tells other tiddlers the way they have to display: how to show the title,
 the tags, its content and the other tiddlers.
 When you download an empty tiddler the initial template for all tiddlers
 is:
\end_layout

\begin_layout Itemize
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/ViewTemplate
\end_layout

\end_inset

 if the tiddler is in view mode (you are not editing it)
\end_layout

\begin_layout Itemize
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/EditTemplate
\end_layout

\end_inset

 if you are editing the tiddler.
\end_layout

\begin_layout Standard
They (View and Edit templates) are tiddlers.
 You can search them in the advanced search and look for its content.
 And you can add your own templates.
\end_layout

\begin_layout Subsection
Filters
\end_layout

\begin_layout Standard
You can think of TiddlyWiki as a database in which the records are tiddlers.
 A database typically provides a way of discovering which records match
 a given pattern, and in TiddlyWiki this is done with filters.
\end_layout

\begin_layout Standard
A filter is a concise notation for selecting a particular set of tiddlers.
 For example, to show the titles of all tiddlers tagged with the
\begin_inset Quotes eld
\end_inset

learn
\begin_inset Quotes erd
\end_inset

 tag we can write
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

{{{ [tag[learn]] }}}
\end_layout

\end_inset

.
 The
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

[tag[learn]]
\end_layout

\end_inset

 item is the filter and the brackets the way to add the links.
\end_layout

\begin_layout Subsection
Macros and widgets
\end_layout

\begin_layout Standard
Tiddlywiki is highly customizable.
 It use macros and widgets to personalize its appearance.
\end_layout

\begin_layout Standard
A macro is a named snippet of text.
 When you use it, Tiddlywiki shows its content.
\end_layout

\begin_layout Standard
A widget is a piece of code to perform some actions.
\end_layout

\begin_layout Subsection
Mechanism
\end_layout

\begin_layout Standard
All elements of tiddlywiki fit together through mechanism.
 For example, the HistoryMechanism keeps track of a list of tiddlers comprising
 the navigation history.
 The StartupMechanism runs the installed startup modules at the end of the
 boot process.
\end_layout

\begin_layout Subsection
Lists
\end_layout

\begin_layout Standard
The manage of list is an important question in Tiddlywiki.
 The more usual list is a tiddler list.
 This is a list with a few number of tiddlers.
 For example:
\end_layout

\begin_layout Standard

\series bold
[[First Tiddler]] SecondTiddler [[Third tiddler]] Finaltiddler
\end_layout

\begin_layout Standard
is a list with 4 tiddlers.
 You can see tiddlers inside [[ - ]] and other tiddlers not.
 If your tiddler contains spaces you have to surround with [[ - ]].
\end_layout

\begin_layout Standard
You can construct a list with filters.
 For example if you find this code in a tiddler:
\end_layout

\begin_layout Standard

\series bold
<$list filter="[tag[$:/tags/PageTemplate]]">
\end_layout

\begin_layout Standard
you can find a list with all tiddlers tagged with the $:/tags/PageTemplate
 tag.
\end_layout

\begin_layout Standard
The most important thing here is the order of the tiddlers inside the list.
 In the first example the order is clear but in the second is not.
 Tiddlywiki will order the list alphabetically.
 But, imagine you need other order in this $list inside your tiddler.
 In this case you can include this order in the
\begin_inset Quotes eld
\end_inset

list
\begin_inset Quotes erd
\end_inset

 field of the tiddler.
 Tiddlywiki will respect that order.
\end_layout

\begin_layout Chapter
Loading tiddlywiki in the browser
\end_layout

\begin_layout Section
Key points
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Itemize
When the browser loads the Tiddlywiki file it runs its javascript code.
\end_layout

\begin_layout Itemize
The Bootprefix of the code loads the Microkernel.
\end_layout

\begin_layout Itemize
The Microkernel is the the only part of Tiddlywiki that is not managed by
 tiddlers.
\end_layout

\begin_layout Itemize
The rest of the application is managed by modules stored in tiddlers as
 javascript code.
\end_layout

\begin_layout Itemize
A tiddler can contain many kinds of data: text, images, javascript code
 (modules), JSON data...
\end_layout

\begin_layout Itemize
A tiddler can have many roles: a plugin, data, formatting code...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Architecture-of-Tiddlywiki"

\end_inset

Architecture of Tiddlywiki
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Architecture.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If you edit the empty.html wiki file you will see something like this:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,basicstyle={\footnotesize},breaklines=true"
inline false
status open

\begin_layout Plain Layout

<html>
\end_layout

\begin_layout Plain Layout

<head> ...
 </head
\end_layout

\begin_layout Plain Layout

<body>
\end_layout

\begin_layout Plain Layout

<div id=
\begin_inset Quotes erd
\end_inset

styleArea> css styles </div>
\end_layout

\begin_layout Plain Layout

<div id=
\begin_inset Quotes erd
\end_inset

storeArea
\begin_inset Quotes erd
\end_inset

> The tiddlers of the wiki </div>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<div id=
\begin_inset Quotes erd
\end_inset

bootKernelPrefix
\begin_inset Quotes erd
\end_inset

 ...
 type: application/javascript>
\end_layout

\begin_layout Plain Layout

<script>
\end_layout

\begin_layout Plain Layout

	var _bootprefix = (function($tw) {
\end_layout

\begin_layout Plain Layout

	"use strict";
\end_layout

\begin_layout Plain Layout

	$tw = $tw || Object.create(null);
\end_layout

\begin_layout Plain Layout

	...
\end_layout

\begin_layout Plain Layout

</script>
\end_layout

\begin_layout Plain Layout

</div>
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

</body>
\end_layout

\begin_layout Plain Layout

</head>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, at the bottom Tiddlywiki is a html page with a lot of javascript code
 inside it.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In this section we describe the loading of TW simplified for a non-programmer
 to understand: from the fist javascript function to the last rendering
 wikitext to html page elements.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Architecture
\end_layout

\begin_layout Standard
What happens when loading a tiddlylwiki file? In Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architecture-of-Tiddlywiki"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we see its architecture.
\end_layout

\begin_layout Enumerate
First of all the operating system loads the browser.
\end_layout

\begin_layout Enumerate
The browser loads the HTML page.
\end_layout

\begin_layout Enumerate
After some css styles and the store area we can see the javascript code.
 The browser runs this code.
\end_layout

\begin_layout Enumerate
It loads the bootprefix.
 The bootprefix is responsible for preparing the kernel to boot on different
 engines e.g.
 browsers and node.js.
\end_layout

\begin_layout Enumerate
The microkernel is the first thing to run, when the application is started
 and it puts some initial objects and functions into the application tree,
 which are needed to load and manage tiddlers.
 After the microkernel built this initial application tree, the remaining
 parts of the application can be loaded as module tiddlers.
\end_layout

\begin_layout Enumerate
The microkernel load the startup modules (startup tiddlers).
\end_layout

\begin_layout Enumerate
At the top we have all modules (tiddlers).
\end_layout

\begin_layout Enumerate
Loading startup tiddlers
\end_layout

\begin_layout Section
Tiddlers as Basic Coding Elements
\end_layout

\begin_layout Standard
Only a small part of the Tiddlywiki is not managed by tiddlers: the Microkernel.
 After the microkernel built this initial application tree, the remaining
 parts of the application can be loaded as module tiddlers.
\end_layout

\begin_layout Standard
A tiddler is the smallest unit of the TiddlyWiki system.
 It can contain any data like plain text, WikiText markup, JavaScript code
 (module tiddler), JSON structures (JSON structures might even contain additiona
l tiddlers.
 Plug-ins are implemented this way to pack multiple tiddlers in a single
 plug-in tiddler), images in SVG format or even binary images encoded with
 base64.
 Internally Tiddlers are immutable objects containing a bunch of key:value
 pairs called fields.
 The only required field of a tiddler is the title field.
\end_layout

\begin_layout Chapter
Components of the tiddlywiki screen
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
In this section we will describe all components of TW.
 We introduce tags as a way of build the tw screen.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Key points
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Itemize

\size footnotesize
Tiddlywiki page is divided in two main sides.
 The left is the Story River.
 The right, the sidebars
\end_layout

\begin_layout Itemize

\size footnotesize
In the left side appears the tiddlers you open.
\end_layout

\begin_layout Itemize

\size footnotesize
The right side shows the title, subtitle, buttons and the menus.
\end_layout

\begin_layout Itemize

\size footnotesize
All inside Tiddlywiki is made of tiddlers.
 A tiddler can have many roles: template, macro, widget, css formating code,
 etc.
 depending of its tag or content-type field.
\end_layout

\begin_layout Itemize

\size footnotesize
Tiddlywiki uses special tiddlers and special tags to configure its appearance.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
The TW whole screen
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-screen-Tiddlywiki"

\end_inset

The Tiddlywiki page
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Screen Elements.png
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-screen-Tiddlywiki"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we can see the Tiddlywiki elements.
 The most important things are the Story River on the left and the right
 elements: title, menus etc.
 The tiddlers that we open will appear in the navigation story on the left.
 With he right menus we can find all the tiddlers of the file.
\end_layout

\begin_layout Standard
These are the elements that we can see in the Tiddlywiki page.
 But in order to personalize our wiki we must go deeper.
 You have to know that all this elements are tiddlers: the title and subtitle
 of your Tiddlywiki are tiddlers.
 The right menus too.
 And the search text box is a tiddler too.
 Even the buttons are tiddlers.
 The top right and left bars, the Above story, the Below story, all are
 tiddlers,
\series bold
system
\series default
 and
\series bold
shadow
\series default
 tiddlers.
\end_layout

\begin_layout Standard
Inside Tiddlywiki, all is a tiddler.
 And you can search and open them.
 For example if you look for the Subtitle in the search bar in advanced
 mode (click in the Advanced search icon on the right of the search bar)
 you will find a tiddler called
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/SiteSubtitle
\end_layout

\end_inset

.
 Its a shadow tiddler.
 If you change its content, the Tiddlywiki subtitle will change.
 And if you look for the save button you will find the tiddler called
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/Buttons/save
\end_layout

\end_inset

 with the code of the button.
\end_layout

\begin_layout Subsection
The story river
\end_layout

\begin_layout Standard
This place of the Tiddlywiki page is where all tiddlers you will open appear.
 You can configure the way Tiddlywiki will open them in the configuration
 tiddler (click the gearwheel icon on the right).
 At first all tiddlers opens each under the other but you can configure
 it so that only the active tiddler appears.
\end_layout

\begin_layout Subsection
The right sidebars
\end_layout

\begin_layout Standard
The right place is where you can see the wiki title, subtitle, the page
 buttons, the search bar....
 and under them the sidebars (the menus).
\end_layout

\begin_layout Standard
You can see 4 tabs: Open for the open tiddlers, Recent for the tiddlers
 you have opened, Tools to customize and configure your wiki and More where
 you can find some utilities.
 Of course they are four tiddlers:
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/SideBar/Open
\end_layout

\end_inset

,
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/SideBar/Recent
\end_layout

\end_inset

,
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/SideBar/Tools
\end_layout

\end_inset

 and
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/SideBar/More
\end_layout

\end_inset

.
 All of them has the tag:
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/tags/SideBar
\end_layout

\end_inset

.
 So if you want to include your own tab create a tiddler and add to them
 this tag.
\end_layout

\begin_layout Standard
This is an important question about Tiddlywiki: The tiddlers that make up
 the screen are chosen with its tags.
 For example, above we have seen that if you put the tag
\begin_inset listings
lstparams "language=HTML"
inline true
status open

\begin_layout Plain Layout

$:/tags/SideBar
\end_layout

\end_inset

 to a tiddler it appears on the left side.
 There are many tags for all places of the screen.
 You can see then in Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tags-TW-places"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\begin_layout Section
Drawing its interface
\end_layout

\begin_layout Standard
We know all are tiddlers but how Tiddlywiki draws its interface? This is
 where templates come in action.
\end_layout

\begin_layout Standard
To tell tiddlywiki where to place all elements we have a template:
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate
\end_layout

\end_inset

.
 Try this: Edit this tiddler an add at the bottom of all code a new line
 with the code: <hr><hr><hr>.
 Then click the save tiddler button and close it.
 Your can see tree lines below the story river.
\end_layout

\begin_layout Standard
Looking this template we can see that it draws this elements:
\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate/topleftbar
\end_layout

\end_inset

.- The top left bar
\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate/toprightbar
\end_layout

\end_inset

.- The top right bar
\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate/sidebar
\end_layout

\end_inset

.- The right side: title, subtitle, menus...
\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate/story
\end_layout

\end_inset

.- All open tiddlers: the Story River
\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/core/ui/PageTemplate/alerts
\end_layout

\end_inset

.- Special tiddlers called alerts (tiddlers with the
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/tags/Alert
\end_layout

\end_inset

 tag)
\end_layout

\begin_layout Standard
All elements are tagged with
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/tags/PageTemplate
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The code of all this elements allows us to add additional elements very
 easily.
 We only have to create a new tiddler and tagged it with the correct tag.
 For example, if we want to show some information above the story river
 we create a tiddler with this information and add the tag
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

$:/tags/AboveStory
\end_layout

\end_inset

.
 The most important tags are in Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tags-TW-places"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tags-TW-places"

\end_inset

The tags of Tiddlywiki places
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Screen Tags.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
What's this? The light blue little squares shows the tiddlers containing
 the title, subtitle, buttons, search bars and tabs.
 And the orange bubbles show the tags.
 So, if you want to include:
\end_layout

\begin_layout Itemize
A top left bar: create a tiddler with the buttons and tagged it with $:/tags/Top
LeftBar.
\end_layout

\begin_layout Itemize
A top right bar: There is a tiddler with this tag: $:/tags/TopRightBar:
 the tiddler $:/core/ui/TopBar/menu.
 It is used to hide the right zone.
\end_layout

\begin_layout Itemize
Content above the story river: Add this content in a tiddler tagged $:/tags/Abov
eStory.
\end_layout

\begin_layout Itemize
Content below the story river Add this content in a tiddler tagged $:/tags/Below
Story.
\end_layout

\begin_layout Itemize
A new tab in the right menus: Add this content in a tiddler tagged $:/tags/SideB
ar.
\end_layout

\begin_layout Itemize
New content below the right menu: Add this content in a tiddler tagged $:/tags/S
ideBarSegment.
\end_layout

\begin_layout Chapter
Customize the TW screen
\end_layout

\begin_layout Section
Key points
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Itemize

\size footnotesize
The PageTemplate is used to display the Tiddlywiki screen.
\end_layout

\begin_layout Itemize

\size footnotesize
It shows all tiddlers tagged with $:/tags/PageTemplate.
 Its order is in the list field of the tiddler with the same title, $:/tags/Page
Template.
\end_layout

\begin_layout Itemize

\size footnotesize
The ViewTemplate is used to display a tiddler in view mode.
\end_layout

\begin_layout Itemize

\size footnotesize
It shows all tiddlers tagged with $:/tags/ViewTemplate.
 Its order is in the list field of the tiddler with the same title, $:/tags/View
Template.
\end_layout

\begin_layout Itemize

\size footnotesize
The EditTemplate is used to display a tiddler when you are editing or creating.
\end_layout

\begin_layout Itemize

\size footnotesize
It shows all tiddlers tagged with $:/tags/EditTemplate.
 Its order is in the list field of the tiddler with the same title, $:/tags/Edit
Template.
\end_layout

\begin_layout Itemize

\size footnotesize
The text/css tiddlers tagged with $:/tags/Stylesheet are used to format
 the text of all Tiddlywiki elements.
\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
One major feature of TiddlyWiki that many new users are unaware of is the
 degree to which TiddlyWiki can be customized, just by adding or removing
 SystemTags in key shadow tiddlers or in your own custom tiddlers.
\end_layout

\begin_layout Itemize
You can add and remove default features in tiddlers in either viewing or
 editing mode (let's say you find the tiddler subtitle distracting, or you
 want to add yourself a reminder that you will see when you edit tiddlers)
\end_layout

\begin_layout Itemize
You can also add and remove default features from the general page layout
 (maybe you want to add a clock to the sidebar, or replace one of the page
 control buttons with your own)
\end_layout

\begin_layout Itemize
You can also rearrange the order in which these features are displayed (perhaps
 you would like tags above tiddler titles, or the subtitle of your TiddlyWiki
 below the page control buttons)
\end_layout

\begin_layout Standard
Once you know what you are doing, all of these things are actually pretty
 easy to do.
\end_layout

\begin_layout Standard
There are three main templates in tiddlywiki:
\end_layout

\begin_layout Itemize
PageTemplate
\end_layout

\begin_layout Itemize
ViewTemplate
\end_layout

\begin_layout Itemize
EditTemplate
\end_layout

\begin_layout Section
PageTemplate
\end_layout

\begin_layout Standard
The $:/core/ui/PageTemplate tiddler is the template that draws the whole
 screen of tiddlywiki.
 It has the tag.
 All tiddlers
\series bold
inside
\series default
 this tiddler one are tagged with the $:/tags/PageTemplate tag.
\end_layout

\begin_layout Standard
What means
\begin_inset Quotes eld
\end_inset

inside
\begin_inset Quotes erd
\end_inset

 this tiddler? If you look at this tiddler you can see this code:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline true
status open

\begin_layout Plain Layout

<$list filter="[all[shadows+tiddlers]tag[$:/tags/PageTemplate]!has[draft.of]]"
 variable="listItem">
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<$transclude tiddler=<<listItem>>/>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

</$list>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is a list who transcludes (shows) all tiddlers tagged whit the $:/tags/Page
Template tag.
 If you tag a new tiddler with that tag it will be included in the main
 wiki page.
 You can find the sort of all the elements tagged in the list field of the
 tiddler $:/tags/PageTemplate (the same title as the tag).
 You can show your tiddler at the top of the screen if you include it as
 the first element of the list field in that tiddler.
\end_layout

\begin_layout Standard
What about the appearance of all this elements? Each element in the page
 has one or more CSS classes styling it.
 The CSS classes associated with the major page template elements are:
\end_layout

\begin_layout Itemize
Top left bar: .tc-topbar .tc-topbar-left
\end_layout

\begin_layout Itemize
Top right bar: .tc-topbar .tc-topbar-right
\end_layout

\begin_layout Itemize
Sidebar: .tc-sidebar-scrollable
\end_layout

\begin_layout Itemize
Story river: .tc-story-river Alerts: .tc-alerts
\end_layout

\begin_layout Standard
If user wants to hide a particular element from being displayed, they can
 create a stylesheet tiddler and add the style display:none; to the correspondin
g class.
\end_layout

\begin_layout Standard
CSS offers far more styling options than changing the visibility of an element.
 A complete description of CSS and its application to the each element is
 out of scope of this reference material.
 User is directed to familiarize themselves with various CSS properties
 from third party sources.
 All major browsers provide the options to inspect a displayed element on
 html page and view the CSS properties attached to that element.
 You may find the way to do it on your browser's website or forums.
 display:none property merely hides the display of the html element.
 It will not stop the element from loading to the DOM structure.
 Widespread use of the same will be a inefficient usage of resources.
\end_layout

\begin_layout Section
ViewTemplate
\end_layout

\begin_layout Standard
This is the template Tiddlywiki uses to display a single tiddler when you
 are reading it.
 Its title is $:/core/ui/ViewTemplate.
 As in the PageTemplate, you can edit it and look at its code:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

<$list filter="[all[shadows+tiddlers]tag[$:/tags/ViewTemplate]!has[draft.of]]"
 variable="listItem">
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<$transclude tiddler=<<listItem>>/>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

</$list>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It shows a list with all tiddlers tagged with the $:/tags/ViewTemplate tag
 sort with the list field of the tiddler $:/tags/ViewTemplate.
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-list-field"

\end_inset

The list field of $:/tags/ViewTemplate
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Viewtemplate Sample.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We want to illustrate the power of this templates.
 In this section we will add a foot at all tiddlers with the date in which
 the tiddler was added to the wiki.
\end_layout

\begin_layout Standard
The steps are:
\end_layout

\begin_layout Itemize
Add a new tiddler with the title $:/foot
\end_layout

\begin_layout Itemize
Add this code to the tiddler:
\begin_inset listings
lstparams "language=HTML,breaklines=true"
inline false
status open

\begin_layout Plain Layout

<small>
\end_layout

\begin_layout Plain Layout

//(Added to the wiki: <$view field="created" format="date"  template="DDth
 MMM YYYY"/>)//
\end_layout

\begin_layout Plain Layout

</small>
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Add the tag $:/tags/ViewTemplate to the template
\end_layout

\begin_layout Itemize
Open the tiddler $:/tags/ViewTemplate
\end_layout

\begin_layout Itemize
Add our tiddler, $:/foot at the end of the list field of that tiddler, $:/tags/V
iewTemplate (look at Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-list-field"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Itemize
Save the tidder.
\end_layout

\begin_layout Standard
You will see a foot in all tiddlers with the created date.
 In Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CSS-Example"
plural "false"
caps "false"
noprefix "false"

\end_inset

 you will see the new tiddler appearance.
\end_layout

\begin_layout Section
EditTemplate
\end_layout

\begin_layout Standard
The $:/core/ui/EditTemplate tiddler is the tiddler Tiddlywiki uses to display
 a tiddler when you are editing or creating it.
 And inside this tiddler you find:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

<$list filter="[all[shadows+tiddlers]tag[$:/tags/EditTemplate]!has[draft.of]]"
 variable="listItem">
\end_layout

\begin_layout Plain Layout

<$set name="tv-config-toolbar-class" filter="[<tv-config-toolbar-class>]
 [<listItem>encodeuricomponent[]addprefix[tc-btn-]]">
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<$transclude tiddler=<<listItem>>/>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

</$set> </$list>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So it shows all tiddlers tagged with $:/tags/EditTemplate sorting with the
 list field of the tiddler with the same name as this tag.
\end_layout

\begin_layout Section
Using CSS in TW
\end_layout

\begin_layout Standard
You know HTML uses CSS to format the text.
 With CSS you can add colors, change font size, add borders and many other
 things.
\end_layout

\begin_layout Standard
If you open the control panel and show the Appearance tab you will see two
 themes: Snow White and Vanilla.
 And in Pallete tab you can choose many color combinations.
 Tiddlywiki uses CSS to change this settings.
 For example, the Vanilla base configuration is in the tiddler $:/themes/tiddlyw
iki/vanilla/base.
 You can see that it is tagged with $:/tags/Stylesheet.
\end_layout

\begin_layout Standard
Inside we find the css configuration for many html tags:
\end_layout

\begin_layout Description
p: Paragraphs
\end_layout

\begin_layout Description
h1: Title 1
\end_layout

\begin_layout Description
h2: Title 2
\end_layout

\begin_layout Description
hr: Lines
\end_layout

\begin_layout Description
table,
\begin_inset space ~
\end_inset

td,
\begin_inset space ~
\end_inset

tr: Tables
\end_layout

\begin_layout Standard
If you read this tiddler you will find all css clases for this theme.
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:CSS-Example"

\end_inset

CSS Example
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Images/Example css.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can add a custom stylesheet tiddler for our own wikis.
 Imagine you want the first word of all paragraphs bigger.
 These are the steps:
\end_layout

\begin_layout Itemize
Create a tiddler, $:/styles
\end_layout

\begin_layout Itemize
Add this content:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p::first-letter {
\end_layout

\begin_layout Plain Layout

  font-size:20pt;
\end_layout

\begin_layout Plain Layout

  text-shadow: gray 0.2px 2px 3px;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Add the tag $:/tags/Stylesheet to our tiddler.
\end_layout

\begin_layout Itemize
If you want, you can add the Type, under the content: text/css (only for
 readability)
\end_layout

\begin_layout Standard
In Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CSS-Example"
plural "false"
caps "false"
noprefix "false"

\end_inset

 you see the style tiddler and the new appearance of the paragraphs.
\end_layout

\begin_layout Chapter
Inside a tiddler
\end_layout

\begin_layout Section
Types of tiddlers
\end_layout

\begin_layout Standard
Tiddlers are the heart of Tiddlywiki.
 Once the Microkernel loads the tiddler functions (addTiddler(tdlr), deleteTiddl
er(tdlr), etc) the rest of the code is stored in tiddlers.
 This means that a tiddler can hold several roles, not only for our notes.
\end_layout

\begin_layout Standard
All tiddlers have a field.
 It is below the text in edit mode: Type.
 It is used to tell Tiddlywiki the type of the tiddler.
 But Tiddlywiki not only look this field to determine the role of the wiki.
 TW also look the tags asigned to the tiddler
\end_layout

\begin_layout Standard
How many of roles does a tiddler have?
\end_layout

\begin_layout Description
Normal
\begin_inset space ~
\end_inset

tiddler: It stores your notes and thinkings.
\end_layout

\begin_layout Description
Tag
\begin_inset space ~
\end_inset

tiddler: Is a tiddler with the same title as a tag.
\end_layout

\begin_layout Description
Image
\begin_inset space ~
\end_inset

tiddler: If you drag a picture into a Tiddlywiki it stores the image in
 a tiddler.
\end_layout

\begin_layout Description
JSON
\begin_inset space ~
\end_inset

tiddler: is a tiddler for storing data.
\end_layout

\begin_layout Description
Dictionary
\begin_inset space ~
\end_inset

tiddler: Is other way of storing data.
\end_layout

\begin_layout Description
CSS
\begin_inset space ~
\end_inset

tiddler: It stores the css rules for text formatting.
\end_layout

\begin_layout Description
Template
\begin_inset space ~
\end_inset

tiddler: It stores the template for other tiddler or even the whole Tiddlywiki
 screen.
\end_layout

\begin_layout Description
Macro
\begin_inset space ~
\end_inset

tiddler: a tiddler that stores macros.
\end_layout

\begin_layout Description
Javascript
\begin_inset space ~
\end_inset

tiddler: a tiddler with javascript code.
 It stores the tiddlywiki code and your widgets.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="3">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Role
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type field
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tag
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Normal tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tag tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GIF image tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
image/gif
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JPG image tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
image/jpeg
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PNG image tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
image/png
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ICO image tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
image/x-icon
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SVG image tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
image/svg+xml
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDF tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
application/pdf
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JSON tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
application/json
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dictionary tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
application/x-tiddler-dictionary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSS tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
text/css
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$:/tags/Stylesheet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Template tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Macro tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$:/tags/Macro
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Widget
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
application/javascript
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$:/tags/Macro
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
javascript code tiddler
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
application/javascript
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Normal tiddler
\end_layout

\begin_layout Subsection
Formatting text
\end_layout

\begin_layout Subsection
Linking content
\end_layout

\begin_layout Subsection
Basic transclusion
\end_layout

\begin_layout Subsection
Showing external content
\end_layout

\begin_layout Standard
as mime types (videos, images, pdfs), as html elements (video controls...,
 )
\end_layout

\begin_layout Section
Adding macros and widgets
\end_layout

\begin_layout Standard
Here you can find basic information.
 Advanced information in later chapters.
\end_layout

\begin_layout Section
CSS tiddlers
\end_layout

\begin_layout Standard
Customizing the appearance of your wiki with CSS tiddlers.
\end_layout

\begin_layout Section
Alert tiddlers
\end_layout

\begin_layout Section
Tag tiddlers
\end_layout

\begin_layout Standard
A way of ranking tags.
 A possible use: sidebar index.
 The color and icon of a tag.
\end_layout

\begin_layout Section
Data tiddlers
\end_layout

\begin_layout Itemize
JSON and Dictionary tiddlers.
\end_layout

\begin_layout Itemize
Refering the data.
\end_layout

\begin_layout Section
Macro tiddlers
\end_layout

\begin_layout Standard
Wikitext macros and javascript macros.
\end_layout

\begin_layout Chapter
The filter notation
\end_layout

\begin_layout Section
The filter basic step
\end_layout

\begin_layout Section
Using filter operators
\end_layout

\begin_layout Section
Combining filter steps
\end_layout

\begin_layout Itemize
combining by OR
\end_layout

\begin_layout Itemize
combining by AND
\end_layout

\begin_layout Itemize
combining by NOT
\end_layout

\begin_layout Section
Regular expressions
\end_layout

\begin_layout Section
Filter uses
\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Chapter
The behavior of tiddlywiki
\end_layout

\begin_layout Section
Creating microcontent
\end_layout

\begin_layout Section
Organizing microcontent with links
\end_layout

\begin_layout Section
Organizing tiddlers with tags
\end_layout

\begin_layout Section
Personalize behavior with macros and widgets
\end_layout

\begin_layout Chapter
Macros
\end_layout

\begin_layout Standard
Customizing your tiddler functionality with macros.
\end_layout

\begin_layout Section
Basic macros included
\end_layout

\begin_layout Section
Writing your own macros
\end_layout

\begin_layout Section
Using macros
\end_layout

\begin_layout Chapter
Widgets
\end_layout

\begin_layout Standard
Customizing your tiddler functionality with widgets.
\end_layout

\begin_layout Section
Basic widgets included
\end_layout

\begin_layout Section
Writting your own widgets
\end_layout

\begin_layout Standard
This question is out of the goal of this book.
 We show how to add javascript code to your tiddler.
\end_layout

\begin_layout Section
Using widgets
\end_layout

\begin_layout Chapter
The scrippting business
\end_layout

\begin_layout Standard
Pieces of code.
\end_layout

\begin_layout Section
List scrippting
\end_layout

\begin_layout Standard
Lists, nested lists, actions and buttons inside lists...
\end_layout

\begin_layout Section
Interface scripting
\end_layout

\begin_layout Standard
How to use buttons, edittext, radiobuttons, checkboxes...
\end_layout

\begin_layout Section
Data tiddlers scripting
\end_layout

\begin_layout Standard
How to use data tiddlers.
\end_layout

\begin_layout Section
Template scripting
\end_layout

\begin_layout Standard
Revealing sections of tiddlywiki, state tiddlers...
\end_layout

\begin_layout Section
Tiddlers scripting
\end_layout

\begin_layout Standard
Creating, removing and editing tiddlers with code, navigating with code...
\end_layout

\begin_layout Chapter
Recipe book
\end_layout

\begin_layout Standard
In this section we will show master code pieces to various situations.
 Personal wikis with many uses.
\end_layout

\begin_layout Standard
Maybe the sections will be:
\end_layout

\begin_layout Section
Personal todo-list
\end_layout

\begin_layout Section
Writting stories
\end_layout

\begin_layout Section
Image gallery
\end_layout

\begin_layout Section
Lesson planner
\end_layout

\begin_layout Section
Simple game
\end_layout

\begin_layout Chapter
Languages
\end_layout

\begin_layout Section
Tiddlywiki languages
\end_layout

\begin_layout Section
Writing international wikis
\end_layout

\begin_layout Chapter
Plugins
\end_layout

\begin_layout Section
Extending tiddlywiki functionality
\end_layout

\begin_layout Section
Creating plugins
\end_layout

\begin_layout Section
Where we can find plugins
\end_layout

\begin_layout Chapter
The people.
 The project
\end_layout

\begin_layout Standard
I want to add a chapter with all the people under this project.
 From Jeremy though the core developers to the wiki writers.
\end_layout

\begin_layout Standard
And the project, its philosophy and the future of tiddlywiki.
\end_layout

\end_body
\end_document
